#!/bin/sh /etc/rc.common
local lte_led_state
local get_lte_url
local get_lte_signal_timeout

lte_led_state="init"

lte_led_ctl() {
    local marginal_blink_state
    local timeout_blink_state
    local led_state
    
    marginal_blink_state="off"
    timeout_blink_state="off"
    led_state="init"
    while true                                
    do 
        led_state=`cat /tmp/lte_led_state`
       
        if [ "$led_state" == "none" ]; then
            echo 1 > /sys/class/gpio/gpio66/value
            echo 255 > /sys/class/leds/lte-run/brightness
            echo 1 > /sys/class/gpio/gpio26/value
        elif [ "$led_state" == "marginal" ]; then
            if [ "$marginal_blink_state" == "on" ]; then
                    echo 1 > /sys/class/gpio/gpio66/value
                    echo 255 > /sys/class/leds/lte-run/brightness
                    echo 1 > /sys/class/gpio/gpio26/value
                    marginal_blink_state="off"
            else
                echo 0 > /sys/class/gpio/gpio66/value
                echo 255 > /sys/class/leds/lte-run/brightness
                echo 1 > /sys/class/gpio/gpio26/value
                marginal_blink_state="on"
            fi
        elif [ "$led_state" == "timeout" ]; then
            if [ "$timeout_blink_state" == "on" ]; then
                    echo 1 > /sys/class/gpio/gpio66/value
                    echo 255 > /sys/class/leds/lte-run/brightness
                    echo 1 > /sys/class/gpio/gpio26/value
                    timeout_blink_state="off"
            else
                echo 0 > /sys/class/gpio/gpio66/value
                echo 0 > /sys/class/leds/lte-run/brightness
                echo 0 > /sys/class/gpio/gpio26/value
                timeout_blink_state="on"
            fi
        elif [ "$led_state" == "weak" ]; then
            echo 0 > /sys/class/gpio/gpio66/value
            echo 255 > /sys/class/leds/lte-run/brightness
            echo 1 > /sys/class/gpio/gpio26/value
        elif [ "$led_state" == "good" ]; then
            echo 0 > /sys/class/gpio/gpio66/value
            echo 0 > /sys/class/leds/lte-run/brightness
            echo 1 > /sys/class/gpio/gpio26/value
        elif [ "$led_state" == "strong" ]; then
            echo 0 > /sys/class/gpio/gpio66/value
            echo 0 > /sys/class/leds/lte-run/brightness
            echo 0 > /sys/class/gpio/gpio26/value
        fi
        sleep 1
    done   
}

init_lte_led() {
    if [ ! -d /sys/class/gpio/gpio66 ]; then
        echo 66 > /sys/class/gpio/export
    fi
    echo out > /sys/class/gpio/gpio66/direction
    echo 1 > /sys/class/gpio/gpio66/value
    
    echo 255 > /sys/class/leds/lte-run/brightness
    
    if [ ! -d /sys/class/gpio/gpio26 ]; then
        echo 26 > /sys/class/gpio/export
    fi
    echo out > /sys/class/gpio/gpio26/direction
    echo 1 > /sys/class/gpio/gpio26/value
}

set_lte_led() {
    if [ $lte_led_state = "$1" ]; then
        return 0
    fi
    
    echo "$1" > /tmp/lte_led_state
    lte_led_state="$1"
}

get_lte_signal() {
    local lte_url
    local lte_url_timeout
    echo > /tmp/lte_result.xml
    lte_url=`uci get oem.bluewave.lte_url`
    if [ -z $lte_url ]; then
        echo "get lte url errror"
        set_lte_led "none"
        return 1
    fi
    lte_url_timeout=`uci -q get oem.bluewave.lte_url_timeout`
    if [ -z $lte_url_timeout ]; then
       lte_url_timeout=3
    fi
    curl --connect-timeout "$lte_url_timeout" "$lte_url" -o /tmp/lte_result.xml
    if [ ! $? -eq 0 ]; then
        if [ $get_lte_signal_timeout -ge 3 ]; then
            echo "curl error"
            set_lte_led "timeout"
        fi
        get_lte_signal_timeout=$(($get_lte_signal_timeout + 1))
        return 1
    fi
    get_lte_signal_timeout=0
    local sinr=`grep sinr  /tmp/lte_result.xml  | cut -d 'd' -f1 | cut -d '>' -f2 | cut -d '.' -f1`
    if [ -z "$sinr" ]; then
        set_lte_led "none"
    elif [ "$sinr" -le -5 ]; then
        set_lte_led "none"
    elif [ "$sinr" -gt -5 -a "$sinr" -le 4 ]; then
        set_lte_led "marginal"
    elif [ "$sinr" -ge 5 -a "$sinr" -le 14 ]; then
        set_lte_led "weak"
    elif [ "$sinr" -ge 15 -a "$sinr" -le 24 ]; then
        set_lte_led "good"
    elif [ "$sinr" -ge 25 -a "$sinr" -le 35 ]; then
        set_lte_led "strong"
    else
        set_lte_led "invalid"
    fi
    return 0
}

{
	local lanif
	local linkmode
	local prev_linkmode
	local wlan_mode
	local wlan_up
	local wlan_led_state
	local lte_led_state
	local lte_link
    local lte_count
	local network_mode
	local dns_addr
	local dns_link_state
	local internet_link_state
	local tr069_addr
	local tr069_srv_state
	local str
	config_load network
	config_get lanif lan ifname
	
	network_mode="route"
	wlan_mode=""
	wlan_up="no"
	wlan_led_state="off"
    lte_check_count=0
	config_load wireless
	config_get wlan_mode wifi0 mode

	lanif=eth0.1
	#echo $lanif > /dev/console
	[ -z "$lanif" ] && exit 0
                                              
	prev_linkmode=yes 
	tr069_addr=""
    get_lte_signal_timeout=0
    init_lte_led
    touch /tmp/lte_led_state
    lte_led_ctl &

	while true                                
	do                                        
		linkmode=$(ethtool $lanif)        
		linkmode=${linkmode#*Link detected: }
		linkmode=${linkmode%%\n}
		while [ "$linkmode" != "yes" -a "$linkmode" != "no" ]
		do                 
			sleep 1    
			linkmode=$(ethtool $lanif)
			linkmode=${linkmode#*Link detected: }
			linkmode=${linkmode%%\n}
		done                      
		#echo $linkmode > /dev/console

		[ -n "$linkmode" ] && [ "$linkmode" != "$prev_linkmode" ] && {
			prev_linkmode=$linkmode

			[ "$linkmode" = "no" ] && {
				echo link down
			}
			[ "$linkmode" = "yes" ] && {
				echo link up
			}
			#/etc/init.d/network reload 
		}

		ra0_str=`ifconfig | grep "ra0"`
		ra1_str=`ifconfig | grep "ra1"`
		ra2_str=`ifconfig | grep "ra2"`
		ra3_str=`ifconfig | grep "ra3"`
		if [ -n "$ra0_str" -o -n "$ra1_str" -o -n "$ra2_str" -o -n "$ra3_str" ]; then
			wlan_up="yes"
		else
			wlan_up="no"
		fi
		if [ -n "$wlan_mode" ] && [ "$wlan_mode" = "ap" ] && [ "$wlan_up" = "yes" ]; then
			if [ "$wlan_led_state" = "off" ] && [ ! -e "/tmp/wifi_btn_flag" ]; then
				echo "timer" > /sys/class/leds/wlan-run/trigger
				echo "500" > /sys/class/leds/wlan-run/delay_on
				echo "500" > /sys/class/leds/wlan-run/delay_off
				wlan_led_state="on"
			fi
		elif [ "$wlan_led_state" != "off" ] && [ ! -e "/tmp/wifi_btn_flag" ]; then
			echo "none" > /sys/class/leds/wlan-run/trigger
			echo "255" > /sys/class/leds/wlan-run/brightness
			wlan_led_state="off"
		fi
		
		#lte_link=$(ifconfig 3g-wan2 2> /dev/null)
		#if [ -n "$lte_link" -a "$lte_led_state" != "on" ]; then
		#	echo "0" > /sys/class/leds/lte-run/brightness
		#	lte_led_state="on"
		#elif [ -z "$lte_link" -a "$lte_led_state" != "off" ]; then
		#	echo "255" > /sys/class/leds/lte-run/brightness
		#	lte_led_state="off"
		#fi

		if [ -z `uci get network.wan.proto -c /tmp/config/` ]; then
			network_mode="bridge"
		fi

		# if [ "route" == "$network_mode" ]; then
		# 	dns_addr=`lua /etc/ubus_get_dns.lua wan`
		# else
		# 	dns_addr=`lua /etc/ubus_get_dns.lua lan`
		# fi

		if [ ! -f /tmp/config/easycwmp ]; then
			cp /etc/config/easycwmp /tmp/config/easycwmp
		fi

		if [ '1' == `uci get easycwmp.acs.enable -c /tmp/config/` ]; then
			tr069_addr=`uci get easycwmp.acs.url -c /tmp/config/ | egrep -o "[a-zA-Z0-9\-]+\.[a-zA-Z0-9\-\.]+" | head -n 1`
		else
			tr069_addr=""
			tr069_srv_state="on"
		fi

		# dns_ping_state="off"
		# for i in $dns_addr
		# do
		# 	ping_ret=`ping -w 2 $i 2>/dev/null | wc -l`
		# 	if [ $ping_ret -gt 4 ]; then
		# 		dns_ping_state="on"
		# 	fi
		# done
		
		# if [ "off" == "$dns_ping_state" ]; then
		# 	dns_link_state="off"
		# else
		# 	dns_link_state="on"
		# fi

		ping_google_ret=`ping -w 2 www.google.com 2>/dev/null | wc -l`
		if [ $ping_google_ret -gt 4 ]; then
			internet_link_state="on"
			echo "0" > /tmp/ping_inet_result
		else
			internet_link_state="off"
			echo "1" > /tmp/ping_inet_result
		fi

		ping_odu_ret=`ping -w 2 192.168.15.1 2>/dev/null | wc -l`
		if [ $ping_odu_ret -gt 4 ]; then
			echo "0" > /tmp/ping_odu_result
		else
			echo "1" > /tmp/ping_odu_result
		fi

		if [ -n "$tr069_addr" ]; then
			ping_ret=`ping -w 2 $tr069_addr 2>/dev/null | wc -l`
			if [ $ping_ret -gt 4 ]; then
				tr069_srv_state="on"
			else
				tr069_srv_state="off"
			fi
		fi

		if [ "on" == "$internet_link_state" -a "on" == "$tr069_srv_state" ]; then
			echo "timer" > /sys/class/leds/uc100-run/trigger
			echo "1000" > /sys/class/leds/uc100-run/delay_on
			echo "1000" > /sys/class/leds/uc100-run/delay_off
		elif [ "off" == "$internet_link_state" -a "on" == "$tr069_srv_state" ]; then
			echo "timer" > /sys/class/leds/uc100-run/trigger
			echo "200" > /sys/class/leds/uc100-run/delay_on
			echo "1800" > /sys/class/leds/uc100-run/delay_off
		elif [ "on" == "$internet_link_state" -a "off" == "$tr069_srv_state" ]; then
			echo "timer" > /sys/class/leds/uc100-run/trigger
			echo "1800" > /sys/class/leds/uc100-run/delay_on
			echo "200" > /sys/class/leds/uc100-run/delay_off
		else
			echo "none" > /sys/class/leds/uc100-run/trigger
			echo "255" > /sys/class/leds/uc100-run/brightness
		fi
        
        if [ $(($lte_check_count % 2)) -eq 0 ]; then
            get_lte_signal
        fi

		sleep 1
        lte_check_count=$(($lte_check_count + 1))
	done        
}
