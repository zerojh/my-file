<%
	local util = require "luci.util"
	local uci = require "luci.model.uci".cursor()
	local ds = require "luci.dispatcher"
	local fs = require "luci.fs"
	local freeswitch = require "luci.scripts.fs_server"

	function get_imei_info()
		local imei = "-"
		if fs.access("/tmp/lte_result.xml") then
			imei = util.exec("grep 'imei' /tmp/lte_result.xml | cut -d '<' -f2 | cut -d '>' -f2"):match("(.+)\n") or "-"
		end
		return imei
	end

	function get_wan_info()
		local info = {}
		local wan_ifname = uci:get("network","wan","ifname")
		if wan_ifname and wan_ifname == "eth0.2" then
			local tmp_str = util.exec("ifconfig eth0.2")
			info.macaddr = string.upper(uci:get("network","wan","macaddr") or "-")
			info.rx_bytes = tmp_str:match("RX bytes:(%d+)") or "0"
			info.tx_bytes = tmp_str:match("TX bytes:(%d+)") or "0"
		else
			info.macaddr = "-"
			info.rx_bytes = "0"
			info.tx_bytes = "0"
		end
		return info
	end

	function get_wlan_info()
		local info = {}
		local wlan_str = util.exec("iwinfo ra0 info")
		if wlan_str and wlan_str ~= "" then
			info.macaddr = wlan_str:match("Access Point:%s+([%w%:]+)") or "-"
			info.ssid = wlan_str:match("ESSID:%s+%\"*([0-9a-zA-Z%-%.%_]+)\"*") or "-"
			info.channel = uci:get("wireless","ra0","channel") == "auto" and "Auto" or (wlan_str:match("Channel:%s+(%d+)") or "-")
			info.encryption = util.exec("iwpriv ra0 show stasecinfo | grep 'BSS(0)'"):match("AuthMode%(%d%)=([0-9A-Z]+),") or "-"
			if info.encryption == "WPA2PSK" then
				info.encryption = "WPA2"
			elseif info.encryption == "WPAPSK" then
				info.encryption = "WPA"
			elseif info.encryption == "AUTOWEP" then
				info.encryption = "WEP"
			end
		else
			info.macaddr = "-"
			info.ssid = "-"
			info.channel = "-"
			info.encryption = "-"
		end
		return info
	end

	function get_dhcp_info()
		local info = {}
		local detect_data = "/tmp/dhcp.onlines"
		local time_now = tonumber(os.time())

		if fs.access(detect_data) then
			local data = io.open(detect_data,"r")
			if data then
				local index = 1
				local wifi_user = util.exec("iwpriv ra0 show stasecinfo") or ""
				local a,b = string.find(wifi_user,"MAC")
				if a and b then
					a,b = string.find(wifi_user,"\n",a)
					if a and b then
						wifi_user = string.sub(wifi_user,a+1) or ""
					else
						wifi_user = ""
					end
				else
					wifi_user = ""
				end

				for line in data:lines() do
					local tmp = {}
					local parse_tb = luci.util.split(line," ")
					if parse_tb[6] and parse_tb[6] == "Online" and (0 == tonumber(parse_tb[1]) or tonumber(parse_tb[1]) > time_now) then -- Hide the result which expired.
						tmp[1] = index
						tmp[2] = parse_tb[4] or ""
						tmp[3] = string.upper(parse_tb[2] or "")
						tmp[4] = parse_tb[3] or ""
						if tmp[3] ~= "" and wifi_user:match(tmp[3]) then
							tmp[5] = "WiFi"
						else
							tmp[5] = "LAN"
						end
						index = index + 1
						table.insert(info, tmp)
					end
				end
			end
		end

		return info
	end

	function get_fxs_info()
		local fxs_status = freeswitch.pstn_status()
		local info = {}
		info.user = fxs_status[1].user or ""
		info.dev_state = fxs_status[1].dev_state or ""
		info.config_state = fxs_status[1].config_state or ""
		info.regstate = fxs_status[1].regstate or ""
		info.hook_state = fxs_status[1].hook_state or ""
		return info
	end

	function get_odu_info()
		local info = {}
		info.inet = util.exec("cat /tmp/ping_inet_result"):match("0") and "0" or "1"
		info.odu = util.exec("cat /tmp/ping_odu_result"):match("0") and "0" or "1"
		return info
	end

	local imei_info = get_imei_info()
	local wan_info = get_wan_info()
	local wlan_info = get_wlan_info()
	local dhcp_info = get_dhcp_info()
	local fxs_info = get_fxs_info()
	local odu_info = get_odu_info()

	if luci.http.formvalue("status") == "1" then
		local rv = {
			imei = imei_info,
			wan = wan_info,
			dhcp = dhcp_info,
			fxs = fxs_info,
			odu = odu_info,
		}
		luci.http.prepare_content("application/json")
		luci.http.write_json(rv)
		return
	end
%>

<%+header%>

<script language=javascript type="text/javascript" src="/luci-static/resources/jquery-1.9.1.min.js"></script>
<script type="text/javascript" src="<%=resource_cbi_js%>"></script>
<script type="text/javascript">//<![CDATA[
var timeout = 0;
var refresh_interval = 3;
var netstat = new Object();
netstat["wan"]={rx_bytes:<%=wan_info.rx_bytes%>,tx_bytes:<%=wan_info.tx_bytes%>};
var uptime=<%=luci.sys.uptime()%>;
function refresh()
{
	refresh_time("uptime",uptime,"+");
	uptime+=1;
}

function refresh_time(id,time_sec,method)
{
	if ("+" == method)
		time_sec = time_sec + 1;
	else
		time_sec = time_sec - 1;

	var d=(Math.floor(time_sec/(3600*24)));
	var h=(Math.floor(time_sec/3600)%24);
	var m=(Math.floor((time_sec%3600)/60));
	var s=(Math.floor(time_sec%60));

	var buff="";
	if(d>0)
		buff=d+" <%:d%> "+h+" <%:h%> "+m+" <%:m%> "+s+" <%:s%> ";
	else if(0==d&&h>0)
		buff=h+" <%:h%> "+m+" <%:m%> "+s+" <%:s%> ";
	else if(0==d&&0==h&&m>0)
		buff=m+" <%:m%> "+s+" <%:s%> ";
	else
		buff=s+" <%:s%>";
	document.getElementById(id).innerHTML = buff;
}

function refresh_dhcp(info)
{
	var str = ""
	$("#dhcp_info").empty();
	if (info && info.length > 0) {
		$("#dhcp_num").text(info.length);
		for (i=0; i<info.length; i++) {
			if (0 == i%2)
				str += "<tr class='cbi-rowstyle-odd'>";
			else
				str += "<tr class='cbi-eowstyle-even'>";

			str += "<td class='text-center'>" + info[i][0] + "</td>";
			str += "<td class='text-center'>" + info[i][1] + "</td>";
			str += "<td class='text-center'>" + info[i][2] + "</td>";
			str += "<td class='text-center'>" + info[i][3] + "</td>";
			str += "<td class='text-center'>" + info[i][4] + "</td>";
		}
		$("#dhcp_info").append(str);
	} else {
		$("#dhcp_num").text(0);
		$("#dhcp_info").append($("<tr><td class='text-center' colspan='5'>This section contains no records yet</td></tr>"));
	}
}

function refresh_fxs(info)
{
	$("#voip_user").text(info.user);
	$("#voip_dev_state").text(info.dev_state);
	$("#voip_config_state").text(info.config_state);
	$("#voip_regstate").text(info.regstate);
	$("#voip_hook_state").text(info.hook_state);

	$("#voip td").each(function(){
		var id = $(this).attr("id");
		var state = $(this).text();
		if(state && "" != state)
		{
			if(state.indexOf("READY") >= 0
			 || ((id.indexOf("voip_config_state") >= 0 || id.indexOf("voip_dev_state") >= 0) && ("OK" == state || state.indexOf("DEFAULT") >= 0))
			 || (id.indexOf("voip_hook_state") >= 0 && ("OFFHOOK" == state || "TALKING" == state || "BUSY"==state))
			 || (id.indexOf("voip_regstate") >= 0 && state.indexOf("Reged") >= 0))
				$(this).css("background","#74ea7d");
			else if("ONHOOK" == state || id.indexOf("user") >= 0)
				$(this).css("background","");
			else if("DETECT_RING" == state)
			{
				$(this).text("RING");
				$(this).css("background","#74ea7d");
			}
			else if("Not Config" == state)
				$(this).css("background","#9a9a9a");
			else
				$(this).css("background","#fe5a56");
		}
	});
}

function refresh_odu(info)
{
	var odu_ret = info.odu || "1";
	var inet_ret = info.inet || "1";

	$("#odu_status").empty();
	$("#odu_tip").empty();
	if (odu_ret == "0" && inet_ret == "0") {
		$("#odu_status").text("Connected");
	} else if (odu_ret == "0" && inet_ret != "0") {
		$("#odu_status").text("Disconnected");
		$("#odu_tip").append($("<a href='http://192.168.15.1'>Click here to redirect Login Page</a>"));
	} else {
		$("#odu_status").text("ODU Not Found");
		$("#odu_tip").append($("<label style='color:red;'>Check LAN cable</label>"));
	}
}

function refresh_netstat(info)
{
	var i = new Array("wan");
	
	for(var j in i)
	{
		var rx_bytes_persec = Math.round((info[i[j]]["rx_bytes"] - netstat[i[j]]["rx_bytes"]) / refresh_interval);
		var tx_bytes_persec = Math.round((info[i[j]]["tx_bytes"] - netstat[i[j]]["tx_bytes"]) / refresh_interval);

		netstat[i[j]]["rx_bytes"] = info[i[j]]["rx_bytes"];
		netstat[i[j]]["tx_bytes"] = info[i[j]]["tx_bytes"];

		var rx_bps_str = String.format("%.2f Mbps ",rx_bytes_persec*8/(1024*1024));
		var tx_bps_str = String.format("%.2f Mbps ",tx_bytes_persec*8/(1024*1024));
		var rx_str = String.format("%.2f MBytes ",info[i[j]]["rx_bytes"]/(1024*1024));
		var tx_str = String.format("%.2f MBytes ",info[i[j]]["tx_bytes"]/(1024*1024));

		if (e = document.getElementById(i[j]+"_network_traffic"))
			e.innerHTML = rx_bps_str + " / " + tx_bps_str;

		if (e = document.getElementById(i[j]+"_network_static"))
			e.innerHTML = rx_str + " / " + tx_str;
	}
}

window.onload = function(){
	window.setInterval("refresh()",1000)
	XHR.poll(refresh_interval, "<%=luci.dispatcher.build_url("admin","ov")%>", {status:1},
	function(x, info){
		if (null == info) {
			timeout+=1;
			if (timeout >= 3) {
				document.location="<%=luci.dispatcher.get_srv_addr("current")%>";
				return;
			}
		} else {
			timeout=0;
		}
		$("#imei").text(info.imei || "-");
		refresh_dhcp(info.dhcp);
		refresh_fxs(info.fxs);
		refresh_odu(info.odu);
		refresh_netstat(info);
	});
}
//]]></script>

<div style="position:relative;top:10px;height:160px;">
<fieldset class="cbi-section">
	<legend>System</legend>
	<table width="100%" cellspacing="10" class="info">
		<tr><td width="30%">Device Model</td><td>S5V</td></tr>
		<tr><td>uptime</td><td id="uptime"></td></tr>
		<tr><td>Firmware Version</td><td><%=pcdata(luci.version.firmware_ver)%></td></tr>
		<tr><td>I+IMEI</td><td id="imei"><%=imei_info%></td></tr>
	</table>
</fieldset>
</div>

<div style="position:relative;top:10px;height:180px;">
<fieldset class="cbi-section">
	<legend>WAN</legend>
	<table width="100%" cellspacing="10" class="info">
		<tr><td width="30%">MAC Address</td><td><%=wan_info.macaddr%></td></tr>
		<tr><td>ODU Status</td><td><span id="odu_status"></span><span id="odu_tip" style="padding-left:20px;"></span></td></tr>
		<tr><td>RX / TX<br/>(Per Second)</td><td id="wan_network_traffic"></td></tr>
		<tr><td>RX / TX</td><td id="wan_network_static"></td></tr>
	</table>
</fieldset>
</div>

<div style="position:relative;top:10px;height:170px;">
<fieldset class="cbi-section">
	<legend>WIFI Network</legend>
	<table width="100%" cellspacing="10" class="info">
		<tr><td width="30%">MAC Address</td><td><%=wlan_info.macaddr%></td></tr>
		<tr><td>SSID</td><td><%=wlan_info.ssid%></td></tr>
		<tr><td>Channel</td><td><%=wlan_info.channel%></td></tr>
		<tr><td>Encryption</td><td><%=wlan_info.encryption%></td></tr>
	</table>
</fieldset>
</div>

<div style="position:relative;top:10px;min-height:130px;">
<fieldset>
	<legend>DHCP Network Status</legend>
	<p style="margin-left:5px;">Number of used IP : <span id="dhcp_num">0</span></p>
	<table class="cbi-section-table" style="margin-bottom:0;">
		<colgroup>
			<col style="width:10%;">
			<col style="width:25%;">
			<col style="width:25%;">
			<col style="width:25%;">
			<col style="width:15%;">
		</colgroup>
		<tr>
			<th>Index</th>
			<th>Hostname</th>
			<th>MAC Address</th>
			<th>IP Address</th>
			<th>Connected</th>
		</tr>
	</table>

	<div style="max-height:275px;overflow:auto;">
	<table class="cbi-section-table">
		<colgroup>
			<col style="width:10%;">
			<col style="width:25%;">
			<col style="width:25%;">
			<col style="width:25%;">
			<col style="width:15%;">
		</colgroup>
		<tbody id="dhcp_info">
		</tbody>
	</table>
	</div>
</fieldset>
</div>

<div style="position:relative;top:10px;min-height:130px;">
<fieldset>
	<legend>VOIP Status</legend>
	<table class="cbi-section-table" style="margin-bottom:0;">
		<colgroup>
			<col style="width:20%;">
			<col style="width:20%;">
			<col style="width:20%;">
			<col style="width:20%;">
			<col style="width:20%;">
		</colgroup>
		<tr>
			<th>Telephone Number</th>
			<th>Module State</th>
			<th>Parameter Status</th>
			<th>SIP Register Status</th>
			<th>Hook State</th>
		</tr>
	</table>

	<table class="cbi-section-table">
		<colgroup>
			<col style="width:20%;">
			<col style="width:20%;">
			<col style="width:20%;">
			<col style="width:20%;">
			<col style="width:20%;">
		</colgroup>
		<tbody id="voip">
			<tr class="cbi-rowstyle-odd">
				<td id="voip_user"><%=fxs_info.user%></td>
				<td id="voip_dev_state"><%=fxs_info.dev_state%></td>
				<td id="voip_config_state"><%=fxs_info.config_state%></td>
				<td id="voip_regstate"><%=fxs_info.regstate%></td>
				<td id="voip_hook_state"><%=fxs_info.hook_state%></td>
			</tr>
		</tbody>
	</table>
</fieldset>
</div>
<%+footer%>
