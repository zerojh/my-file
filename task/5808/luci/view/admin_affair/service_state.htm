<%+header%>
<style>
/* Make text align center. */
.text-center {
	text-align: center;
}

/* The filters input style. */
input.connfilter {
	width: 80%;
}

/* The filter button. */
button.filter-btn {
	color: #3498db;
	background-color: #ffffff;
	padding: 5px;
	border-radius: 4px;
}

/* Content table style */
div.div-table {
	max-height: 450px;
	overflow: auto;
}

/* General table style. */
table td {overflow: hidden; text-overflow: ellipsis; white-space:nowrap; text-align: center;}
table {table-layout: fixed;}
</style>
<script language=javascript type="text/javascript" src="/luci-static/resources/jquery-1.9.1.min.js"></script>
<script src="<%=resource_cbi_js%>"></script>
<script>
var access_state = "ready"
var tmp_access = ""
var starth = 1
var reqnumh = 25

function filter_result()
{
	$("#filter-id").toggle()
	if ("none" == $("#filter-id").css("display")) {
		access_state = tmp_access
		tmp_access = ""
	}
	else {
		tmp_access = access_state
		access_state = "halt"
	}
	keyup_event()
}

function keyup_event()
{
	$(".connfilter").val("")

	/* Simulate a keyup event. */
	var e = $.Event("keyup")
	e.which = 13
	$(".connfilter").trigger(e)
}

function translate_string(option, service, string)
{
	var service = service;
	var string = string;
	var ret = "";

	if (option == "name") {
		if (service == "Network") {
			ret = "网络";
		} else if (service == "Siptrunk") {
			ret = "通讯调度平台";
		} else if (service == "SIM") {
			ret = "SIM卡";
		} else if (service == "L2TP" || service == "PPTP" || service == "OpenVPN") {
			ret = service + "客户端";
		} else if (service == "DDNS") {
			ret = "动态域名服务";
		} else {
			ret = service;
		}
	} else if (option == "state") {
		if (service == "Network") {
			if (string.indexOf("Connected") >= 0) {
				ret = "联网成功";
			} else if (string.indexOf("Disconnected") >= 0) {
				ret = "联网失败";
			} else {
				ret = string;
			}
		} else if (service == "Siptrunk") {
			if (string.indexOf("NOREG") >= 0) {
				ret = "注销成功";
			} else if (string.indexOf("REGED") >= 0) {
				ret = "注册成功";
			} else if (string.indexOf("FAIL_WAIT") >= 0) {
				ret = "注册失败";
			} else {
				ret = string;
			}
		} else if (service == "SIM") {
			if (string.indexOf("OK") >= 0) {
				ret = "注册成功";
			} else if (string.indexOf("NOT_REGISTERED") >= 0) {
				ret = "注册失败";
			} else if (string.indexOf("SIMPIN_NOT_INSERTED") >= 0 || string.indexOf("SIMPIN_ERROR") >= 0) {
				ret = "SIM卡未插入";
			} else {
				ret = string;
			}
		} else if (service == "L2TP" || service == "PPTP" || service == "OpenVPN") {
			if (string.indexOf("Login") >= 0) {
				ret = "登录成功";
			} else if (string.indexOf("Logout") >= 0) {
				ret = "登出成功";
			} else {
				ret = string;
			}
		} else if (service == "DDNS") {
			if (string.match('(\\d*) seconds \\(Check Interval\\) before continue')) {
				ret = "将于" + Number(RegExp.$1)/60 + "分钟后重新检查";
			} else if (string.match('Detecting external address via IP Check URL (.*)')) {
				ret = "正在通过IP检查地址 " + RegExp.$1 + " 检测外部地址";
			} else if (string.match('Resolving domain (.*)')) {
				ret = "解析域名 " + RegExp.$1;
			} else if (string.match('Private or invalid or no IP (.*) given')) {
				ret = "设备地址 " + RegExp.$1 + " 是个私网地址或者非法地址";
			} else if (string.match('Error sending update to DDNS Provider')) {
				ret = "连接动态域名服务商发生错误";
			} else if (string.match('DDNS Provider answered \\[(.*)\\]')) {
				var answer = RegExp.$1;
				if (answer.indexOf('badauth') >= 0) {
					ret = "用户名或密码错误";
				} else if (answer.indexOf('abuse') >= 0) {
					ret = "请求过于频繁, 动态域名更新失败";
				} else if (answer.indexOf('nohost') >= 0 || answer.indexOf('notfqdn') >= 0 || answer.indexOf('numhost') >= 0) {
					ret = "域名不存在";
				} else if (answer.indexOf('good 127.0.0.1') >= 0 || answer.indexOf('badagent') >= 0) {
					ret = "更新地址不符合动态域名提供商要求";
				} else if (answer.match('^good$') || answer.match('^nochg$') || answer.match('good \\d+\\.\\d+\\.\\d+\\.\\d+') || answer.match('nochg \\d+\\.\\d+\\.\\d+\\.\\d+')) {
					ret = "动态域名更新成功";
				} else if (answer.indexOf('dnserr') >= 0 || answer.indexOf('911') >= 0) {
					ret = "动态域名服务商发生错误 [" + answer + "]";
				} else if (answer != "") {
					ret = "动态域名服务商已应答 [" + answer + "]";
				} else {
					ret = "未知信息";
				}
			} else if (string.match('10 seconds for interfaces to fully come up')) {
				ret = "准备连接动态域名服务商";
			} else if (string.match('Error detecting local IP - retry (\\d+)/(\\d+) in (\\d+) seconds')) {
				ret = "检测本地IP错误, " + RegExp.$3 + "秒内重试第" + RegExp.$1 + "次, 共" + RegExp.$2 + "次";
			} else if (string.match('Error sending update - retry (\\d+)/(\\d+) in (\\d+) seconds')) {
				ret = "向服务器发送更新信息错误, " + RegExp.$3 + "秒内重试第" + RegExp.$1 + "次, 共" + RegExp.$2 + "次";
			} else if (string.match('Error detecting Registered IP - retry (\\d+)/(\\d+) in (\\d+) seconds')) {
				ret = "检测已注册IP地址错误, " + RegExp.$3 + "秒内重试第" + RegExp.$1 + "次, 共" + RegExp.$2 + "次";
			} else {
				ret = string;
			}
		} else {
			ret = string;
		}
	}

	return ret;
}

function get_list(param)
{
	if ("ready" == access_state)
	{
		access_state = "query"
		XHR.get('<%=luci.dispatcher.build_url("admin","affair","get_service_log")%>',{action:param,starth:starth,reqnumh:reqnumh},function(x, info)
		{
			if (info != null) {
				if (info["content"] != null) {
					var content = info["content"]
					var num = starth
					var raw

					for (i=0;i<content.length;i++) {
						var str = ""
						raw = content[i]

						if (1 == i%2)
							str += "<tr class='cbi-rowstyle-odd'>"
						else
							str += "<tr class='cbi-rowstyle-even'>"
						str += "<td class='text-center'>"+raw[0]+"</td>"
						str += "<td class='text-center'>"+raw[1]+"</td>"
						str += "<td class='text-center'>"+translate_string('name',raw[2],null)+"</td>"
						str += "<td class='text-center connlist' colspan='2'>"+translate_string('state',raw[2],raw[3])+"</td>"
						$(".history-section-table tbody").append(str)
						num += 1
					}
					starth = num
					access_state = "ready"
				} else if (1 != starth) {
					$(".history-section-table tbody").append($("<tr><td colspan='5'><%:The End%></td></tr>"));
					access_state = "halt"
				}
				if ($(".history-section-table tbody").find("tr").length == 1)
					$(".history-section-table tbody").append($("<tr><td class='text-center' colspan='5'><%:This section contains no records yet%></td></tr>"));

				$(".div-table td").mouseover(function(e){
					var $input = $(this)
					var cont_w = $input[0].scrollWidth
					var vis_w = $input.outerWidth()
					if (cont_w > vis_w) {
						var $fieldset = $input.parents("fieldset")
						var column_name = $fieldset.find(".col-name").find("th").eq($input.index()).text()
						$("#popover-content").html(column_name+" : "+$input.text())
						$("#popover-content").show()
						$("#popover-content").offset({top:$(this).offset().top+30,left:$(this).offset().left-50})
					}
				})

				$(".div-table td").mouseout(function(e){
					$("#popover-content").html("")
					$("#popover-content").hide()
				})
			}
			$(".history-section-table tbody").find("#loading-id").remove()
		});
	}
}

$(document).ready(function() {
	$(".connfilter").keyup(function(e) {
		$(".no-result").remove();
		if (1 != starth) {
			/* ignore tab. */
			var code = e.keyCode || e.which;
			if ("9" == code) {
				return;
			}

			var $input = $(this),
			inputContent = $input.val().toLowerCase(),
			$panel = $input.parents("#filter-id"),
			column = $panel.find("td").index($input.parents("td"))
			$table = $(".connlist").parent("tr"),
			$rows = $table;
			var $filteredRows = $rows.filter(function() {
				var value = $(this).find("td").eq(column).text().toLowerCase();
				return value.indexOf(inputContent) === -1;
			});
			$rows.show();
			$filteredRows.hide();
			if ($filteredRows.length === $rows.length) {
				$(".history-section-table tbody").append($("<tr class='no-result'><td colspan='5'><%:No result found%></td></tr>"));
			}
		}
	})

	$(".history-section-table").scroll(function(e) {
		if("ready" == access_state) {
			var cont_h = $(".history-section-table").get(0).scrollHeight
			var vis_h = $(".history-section-table").height()
			var scroll_y = $(".history-section-table").scrollTop()
			if (scroll_y == cont_h - vis_h) {
				$(".history-section-table tbody").append($("<tr id='loading-id'><td colspan='5'><img src='<%=resource%>/icons/loading.gif' alt='<%:Loading%>'/></td></tr>"));
				get_list("more")
			}
		}
	})

	$(".history-section-table tbody").append($("<tr id='loading-id'><td colspan='5'><img src='<%=resource%>/icons/loading.gif' alt='<%:Loading%>'/></td></tr>"));
	get_list("default")
});
</script>
<h2><a id="content" name="content">状态 / 服务日志</a></h2>
<fieldset>
	<table>
		<colgroup>
			<col style="width:5%;"/>
			<col style="width:20%;"/>
			<col style="width:15%;"/>
			<col style="width:53%;"/>
			<col style="width:7%;"/>
		</colgroup>
		<tr class="col-name">
			<th>编号</th>
			<th>时间</th>
			<th>服务</th>
			<th style="padding-left:50px;">状态</th>
			<th><button type="button" class="filter-btn" onclick="filter_result()"><%:Filter%></button></th>
		</tr>
		<tr id="filter-id" style="display: none;">
			<td><input type="text" class="connfilter"/></td>
			<td><input type="text" class="connfilter"/></td>
			<td><input type="text" class="connfilter"/></td>
			<td colspan="2"><input type="text" class="connfilter"/></td>
		</tr>
	</table>

	<div class="div-table history-section-table">
	<table>
		<colgroup>
			<col style="width:5%;"/>
			<col style="width:20%;"/>
			<col style="width:15%;"/>
			<col style="width:53%;"/>
			<col style="width:7%;"/>
		</colgroup>
		<tbody>
		</tbody>
	</table></div>
</fieldset>
<span id="popover-content" style="display:none;color:#a04112;background:#feffc6;padding:5px;"></span>
<%+footer%>
